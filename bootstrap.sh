#!/usr/bin/env bash
set -euo pipefail

# NSEO Starter Bootstrap Script
# Initialise un environnement de d√©veloppement React + Vite + Tauri

# Configuration des couleurs pour les messages
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly NC='\033[0m' # No Color

# Fonction de gestion des erreurs
trap 'echo -e "${RED}‚ùå Erreur ligne $LINENO - Script interrompu${NC}"; exit 1' ERR

# Fonction de log
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Banner
echo -e "${BLUE}"
echo "üöÄ NSEO Starter Bootstrap"
echo "========================="
echo -e "${NC}"

# 1. V√©rification des pr√©requis
log_info "V√©rification des pr√©requis..."

if ! command -v node >/dev/null 2>&1; then
    log_error "Node.js non trouv√©. Installez Node.js >= 18"
    exit 1
fi

if ! command -v pnpm >/dev/null 2>&1; then
    log_warning "pnpm non trouv√©. Installation via npm..."
    npm install -g pnpm
fi

NODE_VERSION=$(node -v | cut -d'v' -f2)
PNPM_VERSION=$(pnpm -v)

log_success "Node.js v$NODE_VERSION"
log_success "pnpm v$PNPM_VERSION"

# 2. Installation des d√©pendances
log_info "Installation des d√©pendances..."
pnpm install

# 3. V√©rification de l'installation
if [ ! -d "node_modules" ]; then
    log_error "√âchec de l'installation des d√©pendances"
    exit 1
fi

log_success "D√©pendances install√©es avec succ√®s"

# 4. V√©rification optionnelle des scripts
log_info "Scripts disponibles:"
echo "  ‚Ä¢ pnpm dev      - Lancer le serveur de d√©veloppement"
echo "  ‚Ä¢ pnpm build    - Construire pour la production"
echo "  ‚Ä¢ pnpm lint     - V√©rifier le code avec ESLint"
echo "  ‚Ä¢ pnpm preview  - Pr√©visualiser le build"

echo ""
log_success "üéâ Projet NSEO Starter pr√™t !"
log_info "Lancez 'pnpm dev' pour d√©marrer le d√©veloppement"